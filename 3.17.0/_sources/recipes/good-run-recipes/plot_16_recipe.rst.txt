
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "recipes/plot_16_recipe.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_recipes_plot_16_recipe.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_recipes_plot_16_recipe.py:


Plotting contour subplots with different projections
====================================================

In this recipe, we will plot the same data using different projections
as subplots to illustrate visually some available possibilities.

.. GENERATED FROM PYTHON SOURCE LINES 11-12

1. Import cf-python and cf-plot:

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: python


    import cfplot as cfp

    import cf








.. GENERATED FROM PYTHON SOURCE LINES 18-19

2. Read the field in:

.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: python

    f = cf.read("~/recipes/ggap.nc")[0]








.. GENERATED FROM PYTHON SOURCE LINES 22-28

3. List the projection types to use. Here we are using
Cylindrical/Default, North Pole Stereographic, South Pole Stereographic,
Mollweide, Mercator and Robinson. However there are several other choices
possible, see:
https://ncas-cms.github.io/cf-plot/build/user_guide.html#appendixc. Our
chosen list is:

.. GENERATED FROM PYTHON SOURCE LINES 28-30

.. code-block:: python

    projtypes = ["cyl", "npstere", "spstere", "moll", "merc", "robin"]








.. GENERATED FROM PYTHON SOURCE LINES 31-35

4. Create the file with subplots. If changing the number of subplots,
ensure the number of rows * number of columns = the number of projections.
Here we are doing 6 projections so 2 x 3 is fine. Then loop through the
list of projection types and plot each as a sub-plot:

.. GENERATED FROM PYTHON SOURCE LINES 35-58

.. code-block:: python

    cfp.gopen(rows=2, columns=3, bottom=0.2)
    for i, proj in enumerate(projtypes):
        # gpos has 1 added to the index because it takes 1 as its first value
        cfp.gpos(i + 1)
        cfp.mapset(proj=proj)

        # For the final plot only, add a colour bar to cover all the sub-plots
        if i == len(projtypes) - 1:
            cfp.con(
                f.subspace(pressure=850),
                lines=False,
                title=proj,
                colorbar_position=[0.1, 0.1, 0.8, 0.02],
                colorbar_orientation="horizontal",
            )
        else:
            cfp.con(
                f.subspace(pressure=850),
                lines=False,
                title=proj,
                colorbar=False,
            )
    cfp.gclose()



.. image-sg:: /recipes/images/sphx_glr_plot_16_recipe_001.png
   :alt: plot 16 recipe
   :srcset: /recipes/images/sphx_glr_plot_16_recipe_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.194 seconds)


.. _sphx_glr_download_recipes_plot_16_recipe.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_16_recipe.py <plot_16_recipe.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_16_recipe.ipynb <plot_16_recipe.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
