
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "recipes/plot_10_recipe.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_recipes_plot_10_recipe.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_recipes_plot_10_recipe.py:


Calculating and plotting the relative vorticity
===============================================

Vorticity, the microscopic measure of rotation in a fluid, is a vector field
defined as the curl of velocity
`(James R. Holton, Gregory J. Hakim, An Introduction to Dynamic Meteorology,
2013, Elsevier : Academic Press p95-125)
<https://www.sciencedirect.com/science/article/pii/B9780123848666000040>`_.
In this recipe, we will be calculating and plotting the relative vorticity
from the wind components.

.. GENERATED FROM PYTHON SOURCE LINES 15-16

1. Import cf-python and cf-plot:

.. GENERATED FROM PYTHON SOURCE LINES 16-21

.. code-block:: python


    import cfplot as cfp

    import cf








.. GENERATED FROM PYTHON SOURCE LINES 22-23

2. Read the field constructs:

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: python

    f = cf.read("~/recipes/ERA5_monthly_averaged_pressure_levels.nc")
    print(f)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [<CF Field: divergence_of_wind(long_name=time(3), long_name=expver(2), long_name=latitude(721), long_name=longitude(1440)) s**-1>,
     <CF Field: eastward_wind(long_name=time(3), long_name=expver(2), long_name=latitude(721), long_name=longitude(1440)) m s**-1>,
     <CF Field: northward_wind(long_name=time(3), long_name=expver(2), long_name=latitude(721), long_name=longitude(1440)) m s**-1>]




.. GENERATED FROM PYTHON SOURCE LINES 27-28

3. Select wind components and look at their contents:

.. GENERATED FROM PYTHON SOURCE LINES 28-31

.. code-block:: python

    u = f.select_field("eastward_wind")
    print(u)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Field: eastward_wind (ncvar%u)
    ------------------------------
    Data            : eastward_wind(long_name=time(3), long_name=expver(2), long_name=latitude(721), long_name=longitude(1440)) m s**-1
    Dimension coords: long_name=time(3) = [2023-01-01 00:00:00, 2023-02-01 00:00:00, 2023-03-01 00:00:00] gregorian
                    : long_name=expver(2) = [1, 5]
                    : long_name=latitude(721) = [90.0, ..., -90.0] degrees_north
                    : long_name=longitude(1440) = [0.0, ..., 359.75] degrees_east




.. GENERATED FROM PYTHON SOURCE LINES 32-36

.. code-block:: python


    v = f.select_field("northward_wind")
    print(v)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Field: northward_wind (ncvar%v)
    -------------------------------
    Data            : northward_wind(long_name=time(3), long_name=expver(2), long_name=latitude(721), long_name=longitude(1440)) m s**-1
    Dimension coords: long_name=time(3) = [2023-01-01 00:00:00, 2023-02-01 00:00:00, 2023-03-01 00:00:00] gregorian
                    : long_name=expver(2) = [1, 5]
                    : long_name=latitude(721) = [90.0, ..., -90.0] degrees_north
                    : long_name=longitude(1440) = [0.0, ..., 359.75] degrees_east




.. GENERATED FROM PYTHON SOURCE LINES 37-38

4. Create a date-time object for the required time period:

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: python

    jan_2023 = cf.year(2023) & cf.month(1)








.. GENERATED FROM PYTHON SOURCE LINES 41-60

5. The relative vorticity is calculated using `cf.curl_xy
<https://ncas-cms.github.io/cf-python/function/cf.curl_xy.html>`_ and
plotted using `cfplot.con <http://ajheaps.github.io/cf-plot/con.html>`_.
The ``with cf.relaxed_identities(True)`` context manager statement prevents
the curl opereration broadcasting across the two ``expver`` dimensions because
it can't be certain that they are the same as they lack the standardised
metadata. Setting
``cf.relaxed_identities(True)`` allows the ``long_name`` to be treated
as standardised metadata. Since the horizontal coordinates are latitude and
longitude, the
`cf.curl_xy <https://ncas-cms.github.io/cf-python/function/cf.curl_xy.html>`_
function automatically accounts for the Earth's spherical geometry when
calculating the spatial derivatives in the horizontal directions, and for this
it requires the Earth's radius. In this case the radius is not stored in the
wind fields, so must be provided by setting ``radius="earth"`` keyword
parameter. While plotting, the relative vorticity is subspaced for January
2023 and one of the `experiment versions` using the dictionary unpacking
operator (``**``) as there is an equal to sign in the identifier
(``"long_name=expver"``):

.. GENERATED FROM PYTHON SOURCE LINES 60-70

.. code-block:: python


    with cf.relaxed_identities(True):
        rv = cf.curl_xy(u, v, radius="earth")

    cfp.con(
        rv.subspace(T=jan_2023, **{"long_name=expver": 1}),
        lines=False,
        title="Relative Vorticity",
    )




.. image-sg:: /recipes/images/sphx_glr_plot_10_recipe_001.png
   :alt: plot 10 recipe
   :srcset: /recipes/images/sphx_glr_plot_10_recipe_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 71-79

6. Although the X axis is cyclic, it is not recognised as such, owing to the
fact that the longitude coordinate bounds are missing. This results in
discontinuities in the calculated vorticity field on the plot at the
wrap-around location of 0 degrees east. The cyclicity could either be set on
the field itself or just in the curl command  by setting ``'x_wrap=True'``
while calculating the relative vorticity. Setting ``rv.units = "s-1"``,
ensures that the units of the relative vorticity field are consistent with
the calculation and the physical interpretation of the quantity:

.. GENERATED FROM PYTHON SOURCE LINES 79-82

.. code-block:: python


    print(v.coordinate("X").has_bounds())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    False




.. GENERATED FROM PYTHON SOURCE LINES 83-90

.. code-block:: python


    with cf.relaxed_identities(True):
        rv = cf.curl_xy(u, v, x_wrap=True, radius="earth")

    rv.units = "s-1"
    print(rv)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Field: long_name=Horizontal curl of (eastward_wind, northward_wind) (ncvar%u)
    -----------------------------------------------------------------------------
    Data            : long_name=Horizontal curl of (eastward_wind, northward_wind)(long_name=time(3), long_name=expver(2), latitude(721), longitude(1440)) s-1
    Dimension coords: long_name=time(3) = [2023-01-01 00:00:00, 2023-02-01 00:00:00, 2023-03-01 00:00:00] gregorian
                    : long_name=expver(2) = [1, 5]
                    : latitude(721) = [90.0, ..., -90.0] degrees_north
                    : longitude(1440) = [0.0, ..., 359.75] degrees_east




.. GENERATED FROM PYTHON SOURCE LINES 91-97

.. code-block:: python


    cfp.con(
        rv.subspace(T=jan_2023, **{"long_name=expver": 1}),
        lines=False,
        title="Relative Vorticity",
    )



.. image-sg:: /recipes/images/sphx_glr_plot_10_recipe_002.png
   :alt: plot 10 recipe
   :srcset: /recipes/images/sphx_glr_plot_10_recipe_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.290 seconds)


.. _sphx_glr_download_recipes_plot_10_recipe.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_10_recipe.py <plot_10_recipe.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_10_recipe.ipynb <plot_10_recipe.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
